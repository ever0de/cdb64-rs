name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  check:
    name: Cargo Check (default, mmap)
    runs-on: ubuntu-latest
    needs: fmt
    strategy:
      matrix:
        features: ["", "mmap"]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install Rust (stable)
        run: rustup toolchain install stable --profile minimal --no-self-update
      - name: cargo check
        run: cargo check --workspace --all-targets --features "${{ matrix.features }}"

  clippy:
    name: Clippy (all features)
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install Rust (stable)
        run: rustup toolchain install stable --profile minimal --no-self-update
      - name: Install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  test:
    name: Cargo Test (default, mmap)
    runs-on: ubuntu-latest
    needs: clippy
    strategy:
      matrix:
        features: ["", "mmap"]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install Rust (stable)
        run: rustup toolchain install stable --profile minimal --no-self-update
      - name: cargo test (all targets)
        run: cargo test --workspace --all-targets --features "${{ matrix.features }}"
      - name: cargo test (doc tests)
        run: cargo test --workspace --doc --features "${{ matrix.features }}"

  build-node:
    name: Build Node.js
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: cd node && pnpm install
      - name: Build Node.js package
        run: cd node && pnpm build
